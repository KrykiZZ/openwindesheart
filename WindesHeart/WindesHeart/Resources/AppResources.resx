<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alert_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Alert_Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="Alert_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Login_Busy" xml:space="preserve">
    <value>Logging in...</value>
  </data>
  <data name="Login_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Login_Submit" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login_Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Main_Fetch" xml:space="preserve">
    <value>Fetch data</value>
  </data>
  <data name="Main_FetchData" xml:space="preserve">
    <value>Fetch Data</value>
  </data>
  <data name="Main_Fetching" xml:space="preserve">
    <value>Fetching...</value>
  </data>
  <data name="Main_Location_Text" xml:space="preserve">
    <value>Bluetooth need access the location service to find nearby devices. Your location data will not be used.</value>
  </data>
  <data name="Main_Location_Title" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Main_No_Device" xml:space="preserve">
    <value>No device paired</value>
  </data>
  <data name="Main_Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Main_Pair" xml:space="preserve">
    <value>Tap to pair device</value>
  </data>
  <data name="Main_RemoveDevice" xml:space="preserve">
    <value>Do you want to remove this Mi Band 3?</value>
  </data>
  <data name="Main_SyncForAdvice" xml:space="preserve">
    <value>Show Data</value>
  </data>
  <data name="MiBandDevice_BatteryStatus_Charging" xml:space="preserve">
    <value>, battery: {0}% charging</value>
  </data>
  <data name="MiBandDevice_BatteryStatus_Normal" xml:space="preserve">
    <value>, battery: {0}%</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_Configuring" xml:space="preserve">
    <value>Updating configuration</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_Connecting" xml:space="preserve">
    <value>Connecting</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_LastSyncTime" xml:space="preserve">
    <value>Last sync time: {0} {1}</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_LastSyncTimeUnknown" xml:space="preserve">
    <value>Last sync time: not synced yet</value>
  </data>
  <data name="MiBandDevice_DeviceStatus_Syncing" xml:space="preserve">
    <value>Syncing...</value>
  </data>
  <data name="PairDevice_Authorizing" xml:space="preserve">
    <value>Waiting for authorization</value>
  </data>
  <data name="PairDevice_Conflict" xml:space="preserve">
    <value>Mi Band 3 already connected to another app\nPlease disconnect the Mi Band 3 and try again</value>
  </data>
  <data name="PairDevice_Connecting" xml:space="preserve">
    <value>Connecting to Mi Band 3</value>
  </data>
  <data name="PairDevice_Failed" xml:space="preserve">
    <value>Pairing failed</value>
  </data>
  <data name="PairDevice_NoDevicesFound" xml:space="preserve">
    <value>No Mi Band 3 found</value>
  </data>
  <data name="PairDevice_Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="PairDevice_Scanning" xml:space="preserve">
    <value>Scanning\nKeep your phone close to the Mi Band 3</value>
  </data>
  <data name="PairDevice_TabToPair" xml:space="preserve">
    <value>Tap on the Mi Band 3 to pair</value>
  </data>
  <data name="UnpairPopup_Final" xml:space="preserve">
    <value>If you followed all the previous steps, the Mi band 3 should be unpaired from the Mi Fit app and is ready to be paired to the WindesHeart app.\n\nWhen you’re ready tap "Ok" and retry pairing again.</value>
  </data>
  <data name="UnpairPopup_Final_Title" xml:space="preserve">
    <value>Almost done</value>
  </data>
  <data name="UnpairPopup_Intro" xml:space="preserve">
    <value>Before you can pair your Mi Band 3 make sure it's not already paired to the Mi Fit app.\nIn the following steps we will show you how to unpair the Mi Band 3 from the Mi Fit app.\n\nNavigate through the steps by swiping to the left or right.</value>
  </data>
  <data name="UnpairPopup_Intro_Title" xml:space="preserve">
    <value>Before we start</value>
  </data>
  <data name="UnpairPopup_Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="UnpairPopup_Step1" xml:space="preserve">
    <value>First open the Mi Fit app and go to the "Profile" tab listed on the bottom right of the screen.\nTap op the Mi Band 3 listed under "My devices".\n\nIf there is no Mi Band 3 in the list you can tap on "Ok" and retry pairing again.</value>
  </data>
  <data name="UnpairPopup_Step1_Title" xml:space="preserve">
    <value>Step 1</value>
  </data>
  <data name="UnpairPopup_Step2" xml:space="preserve">
    <value>Scroll all the way down to the bottom and tap on the button "Unpair".\nYou will see a new window with the option to unpair, just tap on the button "Unpair".\nAfter a few seconds the app will ask you to confirm that you want to unpair the Mi Band 3, again tap on the button "Unpair" to confirm.</value>
  </data>
  <data name="UnpairPopup_Step2_Title" xml:space="preserve">
    <value>Step 2</value>
  </data>
</root>